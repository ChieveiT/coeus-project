'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _coeux = require('coeux');

var _coeux2 = _interopRequireDefault(_coeux);

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _reduceRight = require('lodash/reduceRight');

var _reduceRight2 = _interopRequireDefault(_reduceRight);

var _types = require('./types');

var _types2 = require('coeux/lib/types');

var _router = require('./reducers/router');

var _router2 = _interopRequireDefault(_router);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Router = function (_React$Component) {
  _inherits(Router, _React$Component);

  function Router() {
    _classCallCheck(this, Router);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Router).apply(this, arguments));
  }

  _createClass(Router, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        store: this.store,
        routes: this.props.routes
      };
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props;
      var routes = _props.routes;
      var middlewares = _props.middlewares;


      var store = this.store = (0, _coeux2.default)(middlewares);

      this.unmount = store.mountReducer({
        router: (0, _router2.default)(routes)
      });

      this.unsubscribe = store.subscribe({
        router: function router(_ref) {
          var _this2 = this;

          var status = _ref.status;
          var location = _ref.location;

          if (status === 'LOADING') {
            routes.match(location).then(function (_ref2) {
              var components = _ref2.components;
              var args = _ref2.args;

              store.dispatch({
                type: 'ROUTE_LOADED',
                args: args
              });

              _this2.setState({ components: components });
            });
          }
        }
      });

      // initState
      this.setState({
        components: []
      });

      store.initState();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.routes !== nextProps.routes) {
        throw new Error('<Router> does not support changing \'routes\' on the fly.');
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unmount();
      this.unsubscribe();
    }
  }, {
    key: 'render',
    value: function render() {
      var components = this.state.components;


      var page = (0, _reduceRight2.default)(components, function (children, types) {
        return (0, _map2.default)(types, function (type) {
          return _react2.default.createElement.apply(_react2.default, [type, null].concat(_toConsumableArray(children)));
        });
      }, []);

      return _react2.default.createElement.apply(_react2.default, ['div', null].concat(_toConsumableArray(page)));
    }
  }]);

  return Router;
}(_react2.default.Component);

exports.default = Router;


Router.propTypes = {
  routes: _types.routesShape.isRequired,
  middlewares: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.func)
};

Router.childContextTypes = {
  store: _types2.storeShape.isRequired,
  routes: _types.routesShape.isRequired
};